/*
 * Copyright (c) 2017, The Easegress Authors
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package gen

import (
	"strings"

	j "github.com/dave/jennifer/jen"
)

func CreateRegistry(config *Config) *j.File {
	file := j.NewFile("registry")
	file.HeaderComment("Code generated by egbuilder. DO NOT EDIT.\n")
	file.Comment("import " + egLogger).Line()
	file.ImportName(egFilters, "filters")
	file.ImportName(egSupervisor, "supervisor")
	file.ImportName(egAPI, "api")

	for _, f := range config.Filters {
		file.ImportName(getModulePath(config.Repo, moduleFilter, f, true), strings.ToLower(f))
	}
	for _, r := range config.Controllers {
		file.ImportName(getModulePath(config.Repo, moduleController, r, true), strings.ToLower(r))
	}

	defineRegisterInit(file, config)
	return file
}

func defineRegisterInit(file *j.File, config *Config) {
	codes := []j.Code{}

	appendCode := func(code j.Code) {
		codes = append(codes, code)
	}

	for _, f := range config.Filters {
		p := getModulePath(config.Repo, moduleFilter, f, true)
		appendCode(j.Comment("register filter " + f))
		appendCode(j.Qual(egFilters, "Register").Call(j.Qual(p, KindName)))
		appendCode(j.Line())
	}
	for _, r := range config.Controllers {
		p := getModulePath(config.Repo, moduleController, r, true)
		appendCode(j.Comment("register controller " + r))
		appendCode(j.Qual(egSupervisor, "Register").Call(j.Op("&").Qual(p, r).Values()))
		appendCode(j.Qual(egAPI, "RegisterObject").Call(j.Qual(p, apiName)).Line())
		appendCode(j.Line())
	}

	file.Add((&Func{
		Name:  "init",
		Block: codes,
	}).Def())
}
