name: Test

on:
  push:
    branches:
      - main
    paths:
      - "**/*.go"
      - "**/*.yaml"
      - "**/*.sh"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/test.yml"
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/test.yml"

env:
  GO_VERSION: "1.24"

jobs:
  test-ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Set up Go 1.x.y
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout codebase
        uses: actions/checkout@v5

      - name: Test
        shell: bash
        run: |
          make test TEST_FLAGS="-race -coverprofile=coverage.txt -covermode=atomic"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.4
        with:
          file: ./coverage.txt
  test-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
    steps:
      - name: Set up Go 1.x.y
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout codebase
        uses: actions/checkout@v5

      - name: Test
        shell: bash
        env:
          EASEGRESS_TEST_SKIP_DOCKER: "true"
        run: |
          make test TEST_FLAGS="-race -coverprofile=coverage.txt -covermode=atomic"

  test-win:
    runs-on: windows-latest
    strategy:
      fail-fast: false
    steps:
      - name: Set up Go 1.x.y
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout codebase
        uses: actions/checkout@v5

      - name: Test
        env:
          EASEGRESS_TEST_SKIP_DOCKER: "true"
        run: |
          go mod verify
          go mod download
          go test -v -gcflags "all=-l" ./pkg/...
  integration-test-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Set up Go 1.x.y
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout codebase
        uses: actions/checkout@v5

      - name: Test
        run: |
          make integration_test

  test-build-wasmhost:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Set up Go 1.x.y
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout codebase
        uses: actions/checkout@v5

      - name: Test
        run: |
          make wasm
