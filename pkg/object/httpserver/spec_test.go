/*
 * Copyright (c) 2017, MegaEase
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package httpserver

import (
	"crypto/tls"
	"fmt"
	"strings"
	"testing"

	"github.com/megaease/easegress/pkg/logger"
	"github.com/megaease/easegress/pkg/supervisor"

	"github.com/stretchr/testify/assert"
)

func init() {
	logger.InitNop()
}

func TestValidate(t *testing.T) {
	assert := assert.New(t)

	yamlConfig := `
name: http-server-test
kind: HTTPServer
port: 10080
cacheSize: 200
http3: true
https: false
rules:
  - paths:
    - pathPrefix: /api
`

	superSpec, err := supervisor.NewSpec(yamlConfig)
	assert.Error(err)

	yamlConfig = `
name: http-server-test
kind: HTTPServer
port: 10080
cacheSize: 200
https: true
rules:
  - paths:
    - pathPrefix: /api
`

	superSpec, err = supervisor.NewSpec(yamlConfig)
	assert.Error(err)

	yamlConfig = `
name: http-server-test
kind: HTTPServer
port: 10080
cacheSize: 200
rules:
  - paths:
    - pathPrefix: /api
`

	superSpec, err = supervisor.NewSpec(yamlConfig)
	assert.NoError(err)
	assert.NotNil(superSpec.ObjectSpec())

	yamlConfig = `
name: http-server-test
kind: HTTPServer
port: 10080
cacheSize: 200
rules:
  - paths:
    - rewriteTarget: /api
`

	superSpec, err = supervisor.NewSpec(yamlConfig)
	assert.True(strings.Contains(err.Error(), "rewriteTarget is specified but path is empty"))
	assert.Nil(superSpec)

	yamlConfig = `
name: http-server-test
kind: HTTPServer
port: 10080
keepAliveTimeout: not-really-a-duration
cacheSize: 200
rules:
  - paths:
    - pathPrefix: /api`
	superSpec, err = supervisor.NewSpec(yamlConfig)
	assert.True(strings.Contains(err.Error(), "keepAliveTimeout: invalid duration"))
	assert.Nil(superSpec)
}

func TestTlsConfig(t *testing.T) {
	assert := assert.New(t)

	type TLSConfigTestCase struct {
		yamlConfig   string
		validSpec    bool
		mTLSExpected bool
	}

	tests := []TLSConfigTestCase{
		// cert has no key
		{
			yamlConfig: `
name: http-server-test
kind: HTTPServer
port: 10080
https: true
keys:
  acme.io: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ1M3YVJXYXNOTi9GVWgKRXBZcHFVRmhHL2k1SGY2dFl4REZ0djhvcUxBRGNjaThabWlZSFczWHJ3aVFENXdia2prZFpMMkRrZFdUbVFnUwpkVUYxS2NzREhIc2UyNDFlbGw0U3BVSXIrVndMZXplUnMwSm1PQ3FYWWxzTHJCUElyRzh6MXZzY0lnZ2tNVVBaCnl1aUJsc0FUWDJLenk1Rm9oZjJRcUthQmllZFA2cmtZU1YrV2Jqc0drcTlVODEyT0UrTFhONUtKaGhEQnF6TS8KNUlnSlgycnY0TXRjU0JwelRNS0h1YmcvdG5hVlM3Ykc1Wmpyc0ZDcWc5bTNJbUc0Ti9BbFVtMTRrU1M0UC9CRgpXMGFBcC9BYjNxT0hVbzlzaXRyK040aTJOckhjQWkyc3BFR29nTGgzS1JTN2ZvVldKSFkrY2hTTGRyMGZmRGxJCng3dXhvQWVWQWdNQkFBRUNnZ0VBQW9FVVpQaXEzWUJvZndqUEVHUzNIWTJaZnFZNU9nRlBQdDl3bCtQUUpDN2oKU2ZyQTI1N2N5V2xOVHc5RkROOUFJL1VjbWNwNWhtdDhUTHc4NGw5VSszZVh6WjNXV2Y5Y0dSdEI5bmZvanJXSgo2K3pQTytqSEtROWZGK0xWNzN5bzVJeE1lVjFISUQ3S3RrS1VGZWxZMnJ1c2RmNEpPMnZWTjRyNFU0cmpLMlNCCktLTkp1U0hxZ01LV21rVmZsS1RhSGlyY2ZBV09sc1ZxWjlzUnpKdTJpcUc1NmtzVFBnRG9LK05obnNyaEc5cEwKT0pwQzRCeDVaQ2J5eUdTYXpjWXNDOTRUQnV6a1E5cGJvcjJTMkl2dC9pc00zaFdhUFhKVk1uNVVpUEhQYWlpNgpvVFpDcFhWTlJidkJyOFVuZFo1ODZQRmJJUWVsN2wzODRGZ2I4Zk95b1FLQmdRRERFY1JsZUIvc0FBWTZjbzAxCkRLVEdXaG9JMFZKRUYwZDhBWlRkR0s1ZEc0R1RnTGhOWFpEZDA2blFITDhxenlwMnppWlNjQTVVbXRsTUFKaWcKenhXNVFDaHZyNGdzT0ZNKzVVWk5sNjU1SU9mL0VQVG1wbUI4ZjhGaDNFT1paRkpaa3h1eVY0eXVoZWpkZnZEYQozeVVzYnFEOU5WZURReWpRZFNzT3U0WHF2UUtCZ1FEQTBtUlpsNkNyZGlRWUdMaXk3ZmY5VUtpQkNZMjZ0c08wCk02am1YMy81V21KTkt0eXZSZFFsbkJtbExMVGEyTlN2WVNVbk9uYklXZGd0SmRWVzhMUEp5ejBKcy9mM3BEam0KUzJoQzZNdjJZb3VhemtQcWlmelh4ZGl4NTJSMXdNT1dPN1VONUJvbE5SVkRDSkNYdVQ1c0YwTDYxRG1YWFdBdwpKRW5mbU9mSnVRS0JnQ3ZxT2c2bDVublkzNDRVNzlrN2lYVG1IK3BRUlhieXpyTUtJQnRPVFNMRTZIenVnNDlYCk94L1ZZT3RyTFZaVDRUbHgyNHEvazFwVXFnckVMNWcwUnEyMzFlS2UzOGNrdndqdjBNM3pFZUpQR0N1Q0E4QlIKUUhPR3gyQmltQTFXV251ejlJNUh5M0lXejMvZDdoYzRHVVJSZTRqRmszZ0hqSTZ4Y2dvVkNXYjVBb0dBRFNrTwo4bEo0QTl2ZllNbW5LWWMyYXRLcmZZc2lZa0VCSUhaNks2Y08rL3pnUXJZUE0rTkhOSDN2L2ljTC9QZlpwRkswCkQzWmREeFdhdkpJZGVuNlpOc2VwVmRVenNuSkI4KzNub3RGeXdsRTlpQVpWK2xjS3E4dDBHOGhZUWZVekpEalYKQmFxdzRpTTZYVVhqWUllakxBdDJaZHBBU0FWMmdES3AzQm42ai9rQ2dZRUFubEtSLzNRUFROTEtkUTE3cWhHVApYYjBUUGtRdWlQQkU0aWJmTDN1NTZDaVNzd3h1RlM4S2szTkYxMTVrUVh4VWR2T3ZrU0lBOFlwU1dzWGdxZzh0CnRTQjBDcGlhTzNLOWxOWEh3ZmNzcHlYVENWaFg5NElvOWhEenZ1bGtqRmIzaG41ams5SFovM3FIWCs3Z1ErbXYKeU5iS3pZcnVlRUhzWWpMVzJmZlpSeXc9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
certs:
  megaease.com: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lRU1FIYU5pMUlzd2hKcnZwcDBrRytRREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFLRXdkQlkyMWxJRU52TUI0WERURTJNREV3TVRFMU1EUXdOVm9YRFRJMU1USXlPVEUxTURRdwpOVm93RWpFUU1BNEdBMVVFQ2hNSFFXTnRaU0JEYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUpMdHBGWnF3MDM4VlNFU2xpbXBRV0ViK0xrZC9xMWpFTVcyL3lpb3NBTnh5THhtYUpnZGJkZXYKQ0pBUG5CdVNPUjFrdllPUjFaT1pDQkoxUVhVcHl3TWNleDdialY2V1hoS2xRaXY1WEF0N041R3pRbVk0S3BkaQpXd3VzRThpc2J6UFcreHdpQ0NReFE5bks2SUdXd0JOZllyUExrV2lGL1pDb3BvR0o1MC9xdVJoSlg1WnVPd2FTCnIxVHpYWTRUNHRjM2tvbUdFTUdyTXova2lBbGZhdS9neTF4SUduTk13b2U1dUQrMmRwVkx0c2JsbU91d1VLcUQKMmJjaVliZzM4Q1ZTYlhpUkpMZy84RVZiUm9DbjhCdmVvNGRTajJ5SzJ2NDNpTFkyc2R3Q0xheWtRYWlBdUhjcApGTHQraFZZa2RqNXlGSXQydlI5OE9Vakh1N0dnQjVVQ0F3RUFBYU56TUhFd0RnWURWUjBQQVFIL0JBUURBZ0trCk1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkdNb0xXMW5tWkU0LzhodVhyTkJjRzdHK0txcU1Cb0dBMVVkRVFRVE1CR0NDV3h2WTJGc2FHOXpkSWNFZndBQQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaGlOK1VUQjlpMUd5QzZnUTRCeDZ4VlJIUzJnYjFoVUlKU3pJClhXT1h5cEMxVjlNUnpHeWJsQTdQYzhJUHllWlRGQkkyUS9xWUNMaWh2S3hRbzZuUk5zQU5zdVFqRGtNakpVUkYKQldhQzZwQzNWRVZ5YURtNnYzelVYcWczZllSbDJvalc0dkZQbDhrdkkxbGxWaGxZZEs0VjVVVTI5R1h0WklJZgpPQTlJa0JVZDJwMVBmQ0J0QWRrc21qTVBWczZUalBzVHdHd2dKa0FqVUlwV1ZjRTUzT1JSQ1JsRDZLK2xDc1RLClBqVGRteXpMeEUyQTltT2xhMEVac3JaNGh5ZmVlMW9rU1dQMFFRUmNVQU1MNDlPR2JMOXY5RXZPaFVac29lczYKWUgzcUVjYWVhaFlJSG00ZnZ3aUJkRUpyT0RaUmt2V2l2ZDlVUU9Lc25BSzI0TENWcEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
keepAlive: true
rules: []`, validSpec: false, mTLSExpected: false,
		},
		// no cert and not auto cert
		{
			yamlConfig: `
name: http-server-test
kind: HTTPServer
port: 10080
https: true
keepAlive: true
rules: []`, validSpec: false, mTLSExpected: false,
		},
		// single cert base
		{
			yamlConfig: `
name: http-server-test
kind: HTTPServer
port: 10080
https: true
keyBase64: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ1M3YVJXYXNOTi9GVWgKRXBZcHFVRmhHL2k1SGY2dFl4REZ0djhvcUxBRGNjaThabWlZSFczWHJ3aVFENXdia2prZFpMMkRrZFdUbVFnUwpkVUYxS2NzREhIc2UyNDFlbGw0U3BVSXIrVndMZXplUnMwSm1PQ3FYWWxzTHJCUElyRzh6MXZzY0lnZ2tNVVBaCnl1aUJsc0FUWDJLenk1Rm9oZjJRcUthQmllZFA2cmtZU1YrV2Jqc0drcTlVODEyT0UrTFhONUtKaGhEQnF6TS8KNUlnSlgycnY0TXRjU0JwelRNS0h1YmcvdG5hVlM3Ykc1Wmpyc0ZDcWc5bTNJbUc0Ti9BbFVtMTRrU1M0UC9CRgpXMGFBcC9BYjNxT0hVbzlzaXRyK040aTJOckhjQWkyc3BFR29nTGgzS1JTN2ZvVldKSFkrY2hTTGRyMGZmRGxJCng3dXhvQWVWQWdNQkFBRUNnZ0VBQW9FVVpQaXEzWUJvZndqUEVHUzNIWTJaZnFZNU9nRlBQdDl3bCtQUUpDN2oKU2ZyQTI1N2N5V2xOVHc5RkROOUFJL1VjbWNwNWhtdDhUTHc4NGw5VSszZVh6WjNXV2Y5Y0dSdEI5bmZvanJXSgo2K3pQTytqSEtROWZGK0xWNzN5bzVJeE1lVjFISUQ3S3RrS1VGZWxZMnJ1c2RmNEpPMnZWTjRyNFU0cmpLMlNCCktLTkp1U0hxZ01LV21rVmZsS1RhSGlyY2ZBV09sc1ZxWjlzUnpKdTJpcUc1NmtzVFBnRG9LK05obnNyaEc5cEwKT0pwQzRCeDVaQ2J5eUdTYXpjWXNDOTRUQnV6a1E5cGJvcjJTMkl2dC9pc00zaFdhUFhKVk1uNVVpUEhQYWlpNgpvVFpDcFhWTlJidkJyOFVuZFo1ODZQRmJJUWVsN2wzODRGZ2I4Zk95b1FLQmdRRERFY1JsZUIvc0FBWTZjbzAxCkRLVEdXaG9JMFZKRUYwZDhBWlRkR0s1ZEc0R1RnTGhOWFpEZDA2blFITDhxenlwMnppWlNjQTVVbXRsTUFKaWcKenhXNVFDaHZyNGdzT0ZNKzVVWk5sNjU1SU9mL0VQVG1wbUI4ZjhGaDNFT1paRkpaa3h1eVY0eXVoZWpkZnZEYQozeVVzYnFEOU5WZURReWpRZFNzT3U0WHF2UUtCZ1FEQTBtUlpsNkNyZGlRWUdMaXk3ZmY5VUtpQkNZMjZ0c08wCk02am1YMy81V21KTkt0eXZSZFFsbkJtbExMVGEyTlN2WVNVbk9uYklXZGd0SmRWVzhMUEp5ejBKcy9mM3BEam0KUzJoQzZNdjJZb3VhemtQcWlmelh4ZGl4NTJSMXdNT1dPN1VONUJvbE5SVkRDSkNYdVQ1c0YwTDYxRG1YWFdBdwpKRW5mbU9mSnVRS0JnQ3ZxT2c2bDVublkzNDRVNzlrN2lYVG1IK3BRUlhieXpyTUtJQnRPVFNMRTZIenVnNDlYCk94L1ZZT3RyTFZaVDRUbHgyNHEvazFwVXFnckVMNWcwUnEyMzFlS2UzOGNrdndqdjBNM3pFZUpQR0N1Q0E4QlIKUUhPR3gyQmltQTFXV251ejlJNUh5M0lXejMvZDdoYzRHVVJSZTRqRmszZ0hqSTZ4Y2dvVkNXYjVBb0dBRFNrTwo4bEo0QTl2ZllNbW5LWWMyYXRLcmZZc2lZa0VCSUhaNks2Y08rL3pnUXJZUE0rTkhOSDN2L2ljTC9QZlpwRkswCkQzWmREeFdhdkpJZGVuNlpOc2VwVmRVenNuSkI4KzNub3RGeXdsRTlpQVpWK2xjS3E4dDBHOGhZUWZVekpEalYKQmFxdzRpTTZYVVhqWUllakxBdDJaZHBBU0FWMmdES3AzQm42ai9rQ2dZRUFubEtSLzNRUFROTEtkUTE3cWhHVApYYjBUUGtRdWlQQkU0aWJmTDN1NTZDaVNzd3h1RlM4S2szTkYxMTVrUVh4VWR2T3ZrU0lBOFlwU1dzWGdxZzh0CnRTQjBDcGlhTzNLOWxOWEh3ZmNzcHlYVENWaFg5NElvOWhEenZ1bGtqRmIzaG41ams5SFovM3FIWCs3Z1ErbXYKeU5iS3pZcnVlRUhzWWpMVzJmZlpSeXc9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
certBase64: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lRU1FIYU5pMUlzd2hKcnZwcDBrRytRREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFLRXdkQlkyMWxJRU52TUI0WERURTJNREV3TVRFMU1EUXdOVm9YRFRJMU1USXlPVEUxTURRdwpOVm93RWpFUU1BNEdBMVVFQ2hNSFFXTnRaU0JEYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUpMdHBGWnF3MDM4VlNFU2xpbXBRV0ViK0xrZC9xMWpFTVcyL3lpb3NBTnh5THhtYUpnZGJkZXYKQ0pBUG5CdVNPUjFrdllPUjFaT1pDQkoxUVhVcHl3TWNleDdialY2V1hoS2xRaXY1WEF0N041R3pRbVk0S3BkaQpXd3VzRThpc2J6UFcreHdpQ0NReFE5bks2SUdXd0JOZllyUExrV2lGL1pDb3BvR0o1MC9xdVJoSlg1WnVPd2FTCnIxVHpYWTRUNHRjM2tvbUdFTUdyTXova2lBbGZhdS9neTF4SUduTk13b2U1dUQrMmRwVkx0c2JsbU91d1VLcUQKMmJjaVliZzM4Q1ZTYlhpUkpMZy84RVZiUm9DbjhCdmVvNGRTajJ5SzJ2NDNpTFkyc2R3Q0xheWtRYWlBdUhjcApGTHQraFZZa2RqNXlGSXQydlI5OE9Vakh1N0dnQjVVQ0F3RUFBYU56TUhFd0RnWURWUjBQQVFIL0JBUURBZ0trCk1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkdNb0xXMW5tWkU0LzhodVhyTkJjRzdHK0txcU1Cb0dBMVVkRVFRVE1CR0NDV3h2WTJGc2FHOXpkSWNFZndBQQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaGlOK1VUQjlpMUd5QzZnUTRCeDZ4VlJIUzJnYjFoVUlKU3pJClhXT1h5cEMxVjlNUnpHeWJsQTdQYzhJUHllWlRGQkkyUS9xWUNMaWh2S3hRbzZuUk5zQU5zdVFqRGtNakpVUkYKQldhQzZwQzNWRVZ5YURtNnYzelVYcWczZllSbDJvalc0dkZQbDhrdkkxbGxWaGxZZEs0VjVVVTI5R1h0WklJZgpPQTlJa0JVZDJwMVBmQ0J0QWRrc21qTVBWczZUalBzVHdHd2dKa0FqVUlwV1ZjRTUzT1JSQ1JsRDZLK2xDc1RLClBqVGRteXpMeEUyQTltT2xhMEVac3JaNGh5ZmVlMW9rU1dQMFFRUmNVQU1MNDlPR2JMOXY5RXZPaFVac29lczYKWUgzcUVjYWVhaFlJSG00ZnZ3aUJkRUpyT0RaUmt2V2l2ZDlVUU9Lc25BSzI0TENWcEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
keepAlive: true
rules: []`, validSpec: true, mTLSExpected: false,
		},
		// certs by domain
		{
			yamlConfig: `
name: http-server-test
kind: HTTPServer
port: 10080
https: true
keys:
  acme.io: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ1M3YVJXYXNOTi9GVWgKRXBZcHFVRmhHL2k1SGY2dFl4REZ0djhvcUxBRGNjaThabWlZSFczWHJ3aVFENXdia2prZFpMMkRrZFdUbVFnUwpkVUYxS2NzREhIc2UyNDFlbGw0U3BVSXIrVndMZXplUnMwSm1PQ3FYWWxzTHJCUElyRzh6MXZzY0lnZ2tNVVBaCnl1aUJsc0FUWDJLenk1Rm9oZjJRcUthQmllZFA2cmtZU1YrV2Jqc0drcTlVODEyT0UrTFhONUtKaGhEQnF6TS8KNUlnSlgycnY0TXRjU0JwelRNS0h1YmcvdG5hVlM3Ykc1Wmpyc0ZDcWc5bTNJbUc0Ti9BbFVtMTRrU1M0UC9CRgpXMGFBcC9BYjNxT0hVbzlzaXRyK040aTJOckhjQWkyc3BFR29nTGgzS1JTN2ZvVldKSFkrY2hTTGRyMGZmRGxJCng3dXhvQWVWQWdNQkFBRUNnZ0VBQW9FVVpQaXEzWUJvZndqUEVHUzNIWTJaZnFZNU9nRlBQdDl3bCtQUUpDN2oKU2ZyQTI1N2N5V2xOVHc5RkROOUFJL1VjbWNwNWhtdDhUTHc4NGw5VSszZVh6WjNXV2Y5Y0dSdEI5bmZvanJXSgo2K3pQTytqSEtROWZGK0xWNzN5bzVJeE1lVjFISUQ3S3RrS1VGZWxZMnJ1c2RmNEpPMnZWTjRyNFU0cmpLMlNCCktLTkp1U0hxZ01LV21rVmZsS1RhSGlyY2ZBV09sc1ZxWjlzUnpKdTJpcUc1NmtzVFBnRG9LK05obnNyaEc5cEwKT0pwQzRCeDVaQ2J5eUdTYXpjWXNDOTRUQnV6a1E5cGJvcjJTMkl2dC9pc00zaFdhUFhKVk1uNVVpUEhQYWlpNgpvVFpDcFhWTlJidkJyOFVuZFo1ODZQRmJJUWVsN2wzODRGZ2I4Zk95b1FLQmdRRERFY1JsZUIvc0FBWTZjbzAxCkRLVEdXaG9JMFZKRUYwZDhBWlRkR0s1ZEc0R1RnTGhOWFpEZDA2blFITDhxenlwMnppWlNjQTVVbXRsTUFKaWcKenhXNVFDaHZyNGdzT0ZNKzVVWk5sNjU1SU9mL0VQVG1wbUI4ZjhGaDNFT1paRkpaa3h1eVY0eXVoZWpkZnZEYQozeVVzYnFEOU5WZURReWpRZFNzT3U0WHF2UUtCZ1FEQTBtUlpsNkNyZGlRWUdMaXk3ZmY5VUtpQkNZMjZ0c08wCk02am1YMy81V21KTkt0eXZSZFFsbkJtbExMVGEyTlN2WVNVbk9uYklXZGd0SmRWVzhMUEp5ejBKcy9mM3BEam0KUzJoQzZNdjJZb3VhemtQcWlmelh4ZGl4NTJSMXdNT1dPN1VONUJvbE5SVkRDSkNYdVQ1c0YwTDYxRG1YWFdBdwpKRW5mbU9mSnVRS0JnQ3ZxT2c2bDVublkzNDRVNzlrN2lYVG1IK3BRUlhieXpyTUtJQnRPVFNMRTZIenVnNDlYCk94L1ZZT3RyTFZaVDRUbHgyNHEvazFwVXFnckVMNWcwUnEyMzFlS2UzOGNrdndqdjBNM3pFZUpQR0N1Q0E4QlIKUUhPR3gyQmltQTFXV251ejlJNUh5M0lXejMvZDdoYzRHVVJSZTRqRmszZ0hqSTZ4Y2dvVkNXYjVBb0dBRFNrTwo4bEo0QTl2ZllNbW5LWWMyYXRLcmZZc2lZa0VCSUhaNks2Y08rL3pnUXJZUE0rTkhOSDN2L2ljTC9QZlpwRkswCkQzWmREeFdhdkpJZGVuNlpOc2VwVmRVenNuSkI4KzNub3RGeXdsRTlpQVpWK2xjS3E4dDBHOGhZUWZVekpEalYKQmFxdzRpTTZYVVhqWUllakxBdDJaZHBBU0FWMmdES3AzQm42ai9rQ2dZRUFubEtSLzNRUFROTEtkUTE3cWhHVApYYjBUUGtRdWlQQkU0aWJmTDN1NTZDaVNzd3h1RlM4S2szTkYxMTVrUVh4VWR2T3ZrU0lBOFlwU1dzWGdxZzh0CnRTQjBDcGlhTzNLOWxOWEh3ZmNzcHlYVENWaFg5NElvOWhEenZ1bGtqRmIzaG41ams5SFovM3FIWCs3Z1ErbXYKeU5iS3pZcnVlRUhzWWpMVzJmZlpSeXc9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
certs:
  acme.io: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lRU1FIYU5pMUlzd2hKcnZwcDBrRytRREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFLRXdkQlkyMWxJRU52TUI0WERURTJNREV3TVRFMU1EUXdOVm9YRFRJMU1USXlPVEUxTURRdwpOVm93RWpFUU1BNEdBMVVFQ2hNSFFXTnRaU0JEYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUpMdHBGWnF3MDM4VlNFU2xpbXBRV0ViK0xrZC9xMWpFTVcyL3lpb3NBTnh5THhtYUpnZGJkZXYKQ0pBUG5CdVNPUjFrdllPUjFaT1pDQkoxUVhVcHl3TWNleDdialY2V1hoS2xRaXY1WEF0N041R3pRbVk0S3BkaQpXd3VzRThpc2J6UFcreHdpQ0NReFE5bks2SUdXd0JOZllyUExrV2lGL1pDb3BvR0o1MC9xdVJoSlg1WnVPd2FTCnIxVHpYWTRUNHRjM2tvbUdFTUdyTXova2lBbGZhdS9neTF4SUduTk13b2U1dUQrMmRwVkx0c2JsbU91d1VLcUQKMmJjaVliZzM4Q1ZTYlhpUkpMZy84RVZiUm9DbjhCdmVvNGRTajJ5SzJ2NDNpTFkyc2R3Q0xheWtRYWlBdUhjcApGTHQraFZZa2RqNXlGSXQydlI5OE9Vakh1N0dnQjVVQ0F3RUFBYU56TUhFd0RnWURWUjBQQVFIL0JBUURBZ0trCk1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkdNb0xXMW5tWkU0LzhodVhyTkJjRzdHK0txcU1Cb0dBMVVkRVFRVE1CR0NDV3h2WTJGc2FHOXpkSWNFZndBQQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaGlOK1VUQjlpMUd5QzZnUTRCeDZ4VlJIUzJnYjFoVUlKU3pJClhXT1h5cEMxVjlNUnpHeWJsQTdQYzhJUHllWlRGQkkyUS9xWUNMaWh2S3hRbzZuUk5zQU5zdVFqRGtNakpVUkYKQldhQzZwQzNWRVZ5YURtNnYzelVYcWczZllSbDJvalc0dkZQbDhrdkkxbGxWaGxZZEs0VjVVVTI5R1h0WklJZgpPQTlJa0JVZDJwMVBmQ0J0QWRrc21qTVBWczZUalBzVHdHd2dKa0FqVUlwV1ZjRTUzT1JSQ1JsRDZLK2xDc1RLClBqVGRteXpMeEUyQTltT2xhMEVac3JaNGh5ZmVlMW9rU1dQMFFRUmNVQU1MNDlPR2JMOXY5RXZPaFVac29lczYKWUgzcUVjYWVhaFlJSG00ZnZ3aUJkRUpyT0RaUmt2V2l2ZDlVUU9Lc25BSzI0TENWcEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
keepAlive: true
rules: []`, validSpec: true, mTLSExpected: false,
		},
		// invalid cert
		{
			yamlConfig: `
name: http-server-test
kind: HTTPServer
port: 10080
https: true
keyBase64: ___
certBase64: ___
keepAlive: true
rules: []`, validSpec: false, mTLSExpected: false,
		},
		// invalid certs
		{
			yamlConfig: `
name: http-server-test
kind: HTTPServer
port: 10080
https: true
keys:
  acme.io: ___
certs:
  acme.io: ___
keepAlive: true
rules: []`, validSpec: false, mTLSExpected: false,
		},
		// domain mismatch
		{
			yamlConfig: `
name: http-server-test
kind: HTTPServer
port: 10080
https: true
keys:
keys:
  acme.io: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ1M3YVJXYXNOTi9GVWgKRXBZcHFVRmhHL2k1SGY2dFl4REZ0djhvcUxBRGNjaThabWlZSFczWHJ3aVFENXdia2prZFpMMkRrZFdUbVFnUwpkVUYxS2NzREhIc2UyNDFlbGw0U3BVSXIrVndMZXplUnMwSm1PQ3FYWWxzTHJCUElyRzh6MXZzY0lnZ2tNVVBaCnl1aUJsc0FUWDJLenk1Rm9oZjJRcUthQmllZFA2cmtZU1YrV2Jqc0drcTlVODEyT0UrTFhONUtKaGhEQnF6TS8KNUlnSlgycnY0TXRjU0JwelRNS0h1YmcvdG5hVlM3Ykc1Wmpyc0ZDcWc5bTNJbUc0Ti9BbFVtMTRrU1M0UC9CRgpXMGFBcC9BYjNxT0hVbzlzaXRyK040aTJOckhjQWkyc3BFR29nTGgzS1JTN2ZvVldKSFkrY2hTTGRyMGZmRGxJCng3dXhvQWVWQWdNQkFBRUNnZ0VBQW9FVVpQaXEzWUJvZndqUEVHUzNIWTJaZnFZNU9nRlBQdDl3bCtQUUpDN2oKU2ZyQTI1N2N5V2xOVHc5RkROOUFJL1VjbWNwNWhtdDhUTHc4NGw5VSszZVh6WjNXV2Y5Y0dSdEI5bmZvanJXSgo2K3pQTytqSEtROWZGK0xWNzN5bzVJeE1lVjFISUQ3S3RrS1VGZWxZMnJ1c2RmNEpPMnZWTjRyNFU0cmpLMlNCCktLTkp1U0hxZ01LV21rVmZsS1RhSGlyY2ZBV09sc1ZxWjlzUnpKdTJpcUc1NmtzVFBnRG9LK05obnNyaEc5cEwKT0pwQzRCeDVaQ2J5eUdTYXpjWXNDOTRUQnV6a1E5cGJvcjJTMkl2dC9pc00zaFdhUFhKVk1uNVVpUEhQYWlpNgpvVFpDcFhWTlJidkJyOFVuZFo1ODZQRmJJUWVsN2wzODRGZ2I4Zk95b1FLQmdRRERFY1JsZUIvc0FBWTZjbzAxCkRLVEdXaG9JMFZKRUYwZDhBWlRkR0s1ZEc0R1RnTGhOWFpEZDA2blFITDhxenlwMnppWlNjQTVVbXRsTUFKaWcKenhXNVFDaHZyNGdzT0ZNKzVVWk5sNjU1SU9mL0VQVG1wbUI4ZjhGaDNFT1paRkpaa3h1eVY0eXVoZWpkZnZEYQozeVVzYnFEOU5WZURReWpRZFNzT3U0WHF2UUtCZ1FEQTBtUlpsNkNyZGlRWUdMaXk3ZmY5VUtpQkNZMjZ0c08wCk02am1YMy81V21KTkt0eXZSZFFsbkJtbExMVGEyTlN2WVNVbk9uYklXZGd0SmRWVzhMUEp5ejBKcy9mM3BEam0KUzJoQzZNdjJZb3VhemtQcWlmelh4ZGl4NTJSMXdNT1dPN1VONUJvbE5SVkRDSkNYdVQ1c0YwTDYxRG1YWFdBdwpKRW5mbU9mSnVRS0JnQ3ZxT2c2bDVublkzNDRVNzlrN2lYVG1IK3BRUlhieXpyTUtJQnRPVFNMRTZIenVnNDlYCk94L1ZZT3RyTFZaVDRUbHgyNHEvazFwVXFnckVMNWcwUnEyMzFlS2UzOGNrdndqdjBNM3pFZUpQR0N1Q0E4QlIKUUhPR3gyQmltQTFXV251ejlJNUh5M0lXejMvZDdoYzRHVVJSZTRqRmszZ0hqSTZ4Y2dvVkNXYjVBb0dBRFNrTwo4bEo0QTl2ZllNbW5LWWMyYXRLcmZZc2lZa0VCSUhaNks2Y08rL3pnUXJZUE0rTkhOSDN2L2ljTC9QZlpwRkswCkQzWmREeFdhdkpJZGVuNlpOc2VwVmRVenNuSkI4KzNub3RGeXdsRTlpQVpWK2xjS3E4dDBHOGhZUWZVekpEalYKQmFxdzRpTTZYVVhqWUllakxBdDJaZHBBU0FWMmdES3AzQm42ai9rQ2dZRUFubEtSLzNRUFROTEtkUTE3cWhHVApYYjBUUGtRdWlQQkU0aWJmTDN1NTZDaVNzd3h1RlM4S2szTkYxMTVrUVh4VWR2T3ZrU0lBOFlwU1dzWGdxZzh0CnRTQjBDcGlhTzNLOWxOWEh3ZmNzcHlYVENWaFg5NElvOWhEenZ1bGtqRmIzaG41ams5SFovM3FIWCs3Z1ErbXYKeU5iS3pZcnVlRUhzWWpMVzJmZlpSeXc9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
certs:
  acme.org: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lRU1FIYU5pMUlzd2hKcnZwcDBrRytRREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFLRXdkQlkyMWxJRU52TUI0WERURTJNREV3TVRFMU1EUXdOVm9YRFRJMU1USXlPVEUxTURRdwpOVm93RWpFUU1BNEdBMVVFQ2hNSFFXTnRaU0JEYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUpMdHBGWnF3MDM4VlNFU2xpbXBRV0ViK0xrZC9xMWpFTVcyL3lpb3NBTnh5THhtYUpnZGJkZXYKQ0pBUG5CdVNPUjFrdllPUjFaT1pDQkoxUVhVcHl3TWNleDdialY2V1hoS2xRaXY1WEF0N041R3pRbVk0S3BkaQpXd3VzRThpc2J6UFcreHdpQ0NReFE5bks2SUdXd0JOZllyUExrV2lGL1pDb3BvR0o1MC9xdVJoSlg1WnVPd2FTCnIxVHpYWTRUNHRjM2tvbUdFTUdyTXova2lBbGZhdS9neTF4SUduTk13b2U1dUQrMmRwVkx0c2JsbU91d1VLcUQKMmJjaVliZzM4Q1ZTYlhpUkpMZy84RVZiUm9DbjhCdmVvNGRTajJ5SzJ2NDNpTFkyc2R3Q0xheWtRYWlBdUhjcApGTHQraFZZa2RqNXlGSXQydlI5OE9Vakh1N0dnQjVVQ0F3RUFBYU56TUhFd0RnWURWUjBQQVFIL0JBUURBZ0trCk1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkdNb0xXMW5tWkU0LzhodVhyTkJjRzdHK0txcU1Cb0dBMVVkRVFRVE1CR0NDV3h2WTJGc2FHOXpkSWNFZndBQQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaGlOK1VUQjlpMUd5QzZnUTRCeDZ4VlJIUzJnYjFoVUlKU3pJClhXT1h5cEMxVjlNUnpHeWJsQTdQYzhJUHllWlRGQkkyUS9xWUNMaWh2S3hRbzZuUk5zQU5zdVFqRGtNakpVUkYKQldhQzZwQzNWRVZ5YURtNnYzelVYcWczZllSbDJvalc0dkZQbDhrdkkxbGxWaGxZZEs0VjVVVTI5R1h0WklJZgpPQTlJa0JVZDJwMVBmQ0J0QWRrc21qTVBWczZUalBzVHdHd2dKa0FqVUlwV1ZjRTUzT1JSQ1JsRDZLK2xDc1RLClBqVGRteXpMeEUyQTltT2xhMEVac3JaNGh5ZmVlMW9rU1dQMFFRUmNVQU1MNDlPR2JMOXY5RXZPaFVac29lczYKWUgzcUVjYWVhaFlJSG00ZnZ3aUJkRUpyT0RaUmt2V2l2ZDlVUU9Lc25BSzI0TENWcEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
keepAlive: true
rules: []`, validSpec: false, mTLSExpected: false,
		},
		{
			yamlConfig: `
name: http-server-test
kind: HTTPServer
port: 10080
https: true
keys:
  acme.io: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ1M3YVJXYXNOTi9GVWgKRXBZcHFVRmhHL2k1SGY2dFl4REZ0djhvcUxBRGNjaThabWlZSFczWHJ3aVFENXdia2prZFpMMkRrZFdUbVFnUwpkVUYxS2NzREhIc2UyNDFlbGw0U3BVSXIrVndMZXplUnMwSm1PQ3FYWWxzTHJCUElyRzh6MXZzY0lnZ2tNVVBaCnl1aUJsc0FUWDJLenk1Rm9oZjJRcUthQmllZFA2cmtZU1YrV2Jqc0drcTlVODEyT0UrTFhONUtKaGhEQnF6TS8KNUlnSlgycnY0TXRjU0JwelRNS0h1YmcvdG5hVlM3Ykc1Wmpyc0ZDcWc5bTNJbUc0Ti9BbFVtMTRrU1M0UC9CRgpXMGFBcC9BYjNxT0hVbzlzaXRyK040aTJOckhjQWkyc3BFR29nTGgzS1JTN2ZvVldKSFkrY2hTTGRyMGZmRGxJCng3dXhvQWVWQWdNQkFBRUNnZ0VBQW9FVVpQaXEzWUJvZndqUEVHUzNIWTJaZnFZNU9nRlBQdDl3bCtQUUpDN2oKU2ZyQTI1N2N5V2xOVHc5RkROOUFJL1VjbWNwNWhtdDhUTHc4NGw5VSszZVh6WjNXV2Y5Y0dSdEI5bmZvanJXSgo2K3pQTytqSEtROWZGK0xWNzN5bzVJeE1lVjFISUQ3S3RrS1VGZWxZMnJ1c2RmNEpPMnZWTjRyNFU0cmpLMlNCCktLTkp1U0hxZ01LV21rVmZsS1RhSGlyY2ZBV09sc1ZxWjlzUnpKdTJpcUc1NmtzVFBnRG9LK05obnNyaEc5cEwKT0pwQzRCeDVaQ2J5eUdTYXpjWXNDOTRUQnV6a1E5cGJvcjJTMkl2dC9pc00zaFdhUFhKVk1uNVVpUEhQYWlpNgpvVFpDcFhWTlJidkJyOFVuZFo1ODZQRmJJUWVsN2wzODRGZ2I4Zk95b1FLQmdRRERFY1JsZUIvc0FBWTZjbzAxCkRLVEdXaG9JMFZKRUYwZDhBWlRkR0s1ZEc0R1RnTGhOWFpEZDA2blFITDhxenlwMnppWlNjQTVVbXRsTUFKaWcKenhXNVFDaHZyNGdzT0ZNKzVVWk5sNjU1SU9mL0VQVG1wbUI4ZjhGaDNFT1paRkpaa3h1eVY0eXVoZWpkZnZEYQozeVVzYnFEOU5WZURReWpRZFNzT3U0WHF2UUtCZ1FEQTBtUlpsNkNyZGlRWUdMaXk3ZmY5VUtpQkNZMjZ0c08wCk02am1YMy81V21KTkt0eXZSZFFsbkJtbExMVGEyTlN2WVNVbk9uYklXZGd0SmRWVzhMUEp5ejBKcy9mM3BEam0KUzJoQzZNdjJZb3VhemtQcWlmelh4ZGl4NTJSMXdNT1dPN1VONUJvbE5SVkRDSkNYdVQ1c0YwTDYxRG1YWFdBdwpKRW5mbU9mSnVRS0JnQ3ZxT2c2bDVublkzNDRVNzlrN2lYVG1IK3BRUlhieXpyTUtJQnRPVFNMRTZIenVnNDlYCk94L1ZZT3RyTFZaVDRUbHgyNHEvazFwVXFnckVMNWcwUnEyMzFlS2UzOGNrdndqdjBNM3pFZUpQR0N1Q0E4QlIKUUhPR3gyQmltQTFXV251ejlJNUh5M0lXejMvZDdoYzRHVVJSZTRqRmszZ0hqSTZ4Y2dvVkNXYjVBb0dBRFNrTwo4bEo0QTl2ZllNbW5LWWMyYXRLcmZZc2lZa0VCSUhaNks2Y08rL3pnUXJZUE0rTkhOSDN2L2ljTC9QZlpwRkswCkQzWmREeFdhdkpJZGVuNlpOc2VwVmRVenNuSkI4KzNub3RGeXdsRTlpQVpWK2xjS3E4dDBHOGhZUWZVekpEalYKQmFxdzRpTTZYVVhqWUllakxBdDJaZHBBU0FWMmdES3AzQm42ai9rQ2dZRUFubEtSLzNRUFROTEtkUTE3cWhHVApYYjBUUGtRdWlQQkU0aWJmTDN1NTZDaVNzd3h1RlM4S2szTkYxMTVrUVh4VWR2T3ZrU0lBOFlwU1dzWGdxZzh0CnRTQjBDcGlhTzNLOWxOWEh3ZmNzcHlYVENWaFg5NElvOWhEenZ1bGtqRmIzaG41ams5SFovM3FIWCs3Z1ErbXYKeU5iS3pZcnVlRUhzWWpMVzJmZlpSeXc9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
certs:
  acme.io: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lRU1FIYU5pMUlzd2hKcnZwcDBrRytRREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFLRXdkQlkyMWxJRU52TUI0WERURTJNREV3TVRFMU1EUXdOVm9YRFRJMU1USXlPVEUxTURRdwpOVm93RWpFUU1BNEdBMVVFQ2hNSFFXTnRaU0JEYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUpMdHBGWnF3MDM4VlNFU2xpbXBRV0ViK0xrZC9xMWpFTVcyL3lpb3NBTnh5THhtYUpnZGJkZXYKQ0pBUG5CdVNPUjFrdllPUjFaT1pDQkoxUVhVcHl3TWNleDdialY2V1hoS2xRaXY1WEF0N041R3pRbVk0S3BkaQpXd3VzRThpc2J6UFcreHdpQ0NReFE5bks2SUdXd0JOZllyUExrV2lGL1pDb3BvR0o1MC9xdVJoSlg1WnVPd2FTCnIxVHpYWTRUNHRjM2tvbUdFTUdyTXova2lBbGZhdS9neTF4SUduTk13b2U1dUQrMmRwVkx0c2JsbU91d1VLcUQKMmJjaVliZzM4Q1ZTYlhpUkpMZy84RVZiUm9DbjhCdmVvNGRTajJ5SzJ2NDNpTFkyc2R3Q0xheWtRYWlBdUhjcApGTHQraFZZa2RqNXlGSXQydlI5OE9Vakh1N0dnQjVVQ0F3RUFBYU56TUhFd0RnWURWUjBQQVFIL0JBUURBZ0trCk1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkdNb0xXMW5tWkU0LzhodVhyTkJjRzdHK0txcU1Cb0dBMVVkRVFRVE1CR0NDV3h2WTJGc2FHOXpkSWNFZndBQQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaGlOK1VUQjlpMUd5QzZnUTRCeDZ4VlJIUzJnYjFoVUlKU3pJClhXT1h5cEMxVjlNUnpHeWJsQTdQYzhJUHllWlRGQkkyUS9xWUNMaWh2S3hRbzZuUk5zQU5zdVFqRGtNakpVUkYKQldhQzZwQzNWRVZ5YURtNnYzelVYcWczZllSbDJvalc0dkZQbDhrdkkxbGxWaGxZZEs0VjVVVTI5R1h0WklJZgpPQTlJa0JVZDJwMVBmQ0J0QWRrc21qTVBWczZUalBzVHdHd2dKa0FqVUlwV1ZjRTUzT1JSQ1JsRDZLK2xDc1RLClBqVGRteXpMeEUyQTltT2xhMEVac3JaNGh5ZmVlMW9rU1dQMFFRUmNVQU1MNDlPR2JMOXY5RXZPaFVac29lczYKWUgzcUVjYWVhaFlJSG00ZnZ3aUJkRUpyT0RaUmt2V2l2ZDlVUU9Lc25BSzI0TENWcEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
caCertBase64: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lRU1FIYU5pMUlzd2hKcnZwcDBrRytRREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFLRXdkQlkyMWxJRU52TUI0WERURTJNREV3TVRFMU1EUXdOVm9YRFRJMU1USXlPVEUxTURRdwpOVm93RWpFUU1BNEdBMVVFQ2hNSFFXTnRaU0JEYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUpMdHBGWnF3MDM4VlNFU2xpbXBRV0ViK0xrZC9xMWpFTVcyL3lpb3NBTnh5THhtYUpnZGJkZXYKQ0pBUG5CdVNPUjFrdllPUjFaT1pDQkoxUVhVcHl3TWNleDdialY2V1hoS2xRaXY1WEF0N041R3pRbVk0S3BkaQpXd3VzRThpc2J6UFcreHdpQ0NReFE5bks2SUdXd0JOZllyUExrV2lGL1pDb3BvR0o1MC9xdVJoSlg1WnVPd2FTCnIxVHpYWTRUNHRjM2tvbUdFTUdyTXova2lBbGZhdS9neTF4SUduTk13b2U1dUQrMmRwVkx0c2JsbU91d1VLcUQKMmJjaVliZzM4Q1ZTYlhpUkpMZy84RVZiUm9DbjhCdmVvNGRTajJ5SzJ2NDNpTFkyc2R3Q0xheWtRYWlBdUhjcApGTHQraFZZa2RqNXlGSXQydlI5OE9Vakh1N0dnQjVVQ0F3RUFBYU56TUhFd0RnWURWUjBQQVFIL0JBUURBZ0trCk1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkdNb0xXMW5tWkU0LzhodVhyTkJjRzdHK0txcU1Cb0dBMVVkRVFRVE1CR0NDV3h2WTJGc2FHOXpkSWNFZndBQQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaGlOK1VUQjlpMUd5QzZnUTRCeDZ4VlJIUzJnYjFoVUlKU3pJClhXT1h5cEMxVjlNUnpHeWJsQTdQYzhJUHllWlRGQkkyUS9xWUNMaWh2S3hRbzZuUk5zQU5zdVFqRGtNakpVUkYKQldhQzZwQzNWRVZ5YURtNnYzelVYcWczZllSbDJvalc0dkZQbDhrdkkxbGxWaGxZZEs0VjVVVTI5R1h0WklJZgpPQTlJa0JVZDJwMVBmQ0J0QWRrc21qTVBWczZUalBzVHdHd2dKa0FqVUlwV1ZjRTUzT1JSQ1JsRDZLK2xDc1RLClBqVGRteXpMeEUyQTltT2xhMEVac3JaNGh5ZmVlMW9rU1dQMFFRUmNVQU1MNDlPR2JMOXY5RXZPaFVac29lczYKWUgzcUVjYWVhaFlJSG00ZnZ3aUJkRUpyT0RaUmt2V2l2ZDlVUU9Lc25BSzI0TENWcEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
keepAlive: true
rules: []`, validSpec: true, mTLSExpected: true,
		},
	}

	for i := 0; i < len(tests); i++ {
		t.Run("test case "+fmt.Sprint(i), func(t *testing.T) {
			testcase := tests[i]
			superSpec, err := supervisor.NewSpec(testcase.yamlConfig)
			if !testcase.validSpec {
				assert.NotNil(err)
				return
			}
			assert.Nil(err)
			spec := superSpec.ObjectSpec().(*Spec)
			tlsConf, err := spec.tlsConfig()
			assert.Nil(err)
			assert.Equal(len(tlsConf.Certificates), 1)

			if testcase.mTLSExpected {
				assert.Equal(tlsConf.ClientAuth, tls.RequireAndVerifyClientCert)
			}

			cert, err := tlsConf.GetCertificate(nil)
			assert.Nil(cert)
			assert.NoError(err)
		})
	}
}
